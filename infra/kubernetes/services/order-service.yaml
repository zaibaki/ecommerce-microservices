# infra/kubernetes/services/order-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: ecommerce
  labels:
    app: order-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: order-service
      version: v1
  template:
    metadata:
      labels:
        app: order-service
        version: v1
    spec:
      serviceAccountName: ecommerce-sa
      containers:
      - name: order-service
        image: ecommerceacr.azurecr.io/order-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: MONGODB_ATLAS_URI
          valueFrom:
            secretKeyRef:
              name: application-secrets
              key: mongodb-uri
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: application-secrets
              key: redis-hostname
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application-secrets
              key: redis-password
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: application-config
              key: KAFKA_BROKERS
        - name: INVENTORY_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: application-config
              key: INVENTORY_SERVICE_URL
        - name: PAYMENT_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: application-config
              key: PAYMENT_SERVICE_URL
        - name: USER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: application-config
              key: USER_SERVICE_URL
        resources:
          requests:
            memory: "768Mi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: ecommerce
  labels:
    app: order-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: order-service
